<UserControl x:Class="Inse.Fiproject.Wpf.Controls.FrameWindowOverlayMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mvvm="clr-namespace:Inse.Fiproject.Wpf.Mvvm">

    <Border x:Name="OverlayBackground" Background="{DynamicResource OverlayBackground}" BorderThickness="0">
        <Border x:Name="OverlayLayout" 
                Width="320"
                HorizontalAlignment="Right" 
                Background="{DynamicResource Background}"
                BorderBrush="{DynamicResource Accent}" 
                BorderThickness="0, 0, 0, 0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>

                <!--  caption -->
                <Border Grid.Row="0" Background="{DynamicResource Background}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="40" />
                        </Grid.ColumnDefinitions>

                        <!--  title  -->
                        <Border Grid.Column="0">
                            <TextBlock Text="메뉴"
                                       Margin="10, 0, 0, 0"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource Foreground}" />
                        </Border>

                        <!--  hide  -->
                        <Border Grid.Column="1" WindowChrome.IsHitTestVisibleInChrome="True">
                            <Button Command="{Binding CloseMenuCommand, Mode=OneTime}">
                                <Path Data="M 0,1 L 11,1 Z M 0,6 L 11,6 Z M 0,11 L 11,11 Z"
                                      Width="12"
                                      Height="12"
                                      Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"
                                      StrokeThickness="2" />
                            </Button>
                        </Border>

                        <!--  nop  -->
                        <Border Grid.Column="2">
                            <Path Data="M 0,0 L 7,7 Z M 8,0 L 0,8 Z"
                                  Width="8"
                                  Height="8"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Stroke="{DynamicResource Foreground}"
                                  StrokeThickness="2" />
                        </Border>

                        <!--  nop  -->
                        <Border Grid.Column="3">
                            <Path Data="M 0,0 L 7,7 Z M 8,0 L 0,8 Z"
                                  Width="8"
                                  Height="8"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Stroke="{DynamicResource Foreground}"
                                  StrokeThickness="2" />
                        </Border>

                        <!--  nop  -->
                        <Border Grid.Column="4">
                            <Path Data="M 0,0 L 7,7 Z M 8,0 L 0,8 Z"
                                  Width="8"
                                  Height="8"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Stroke="{DynamicResource Foreground}"
                                  StrokeThickness="2" />
                        </Border>
                    </Grid>
                </Border>

                <!--  menu  -->
                <Border Grid.Row="1">
                    <ListBox ItemsSource="{Binding MenuItems}"
                             SelectedItem="{Binding SelectedMenuItem, Mode=TwoWay}"
                             Background="{DynamicResource Background}">
                        <ListBox.Template>
                            <ControlTemplate TargetType="ListBox">
                                <Border>
                                    <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                                  VerticalScrollBarVisibility="Auto"
                                                  CanContentScroll="False">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </ControlTemplate>
                        </ListBox.Template>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="IsTabStop" Value="False" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Height" Value="40" />
                                <Setter Property="Padding" Value="10, 0, 0, 0" />
                                <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundNormal}" />
                                <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundNormal}" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                                <Setter Property="VerticalAlignment" Value="Stretch" />
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem">
                                            <Border Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                                <TextBlock Text="{Binding Name}" 
                                                           Margin="{TemplateBinding Padding}"
                                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                           Foreground="{TemplateBinding Foreground}" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>

                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundHover}" />
                                        <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundHover}" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedNormal}" />
                                        <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedNormal}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True" />
                                            <Condition Property="IsSelected" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.Setters>
                                            <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedHover}" />
                                            <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedHover}" />
                                        </MultiTrigger.Setters>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                </Border>

                <!--  ??  -->
                <Border Grid.Row="2">

                </Border>
            </Grid>

            <Border.RenderTransform>
                <TranslateTransform />
            </Border.RenderTransform>
        </Border>
    </Border>

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard>
                <Storyboard>

                    <!--  slide  -->
                    <DoubleAnimation From="{Binding ElementName=OverlayLayout, Path=Width}" To="0" Duration="0:0:0.7"
                                     Storyboard.TargetName="OverlayLayout"
                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                        <DoubleAnimation.EasingFunction>
                            <PowerEase Power="5" EasingMode="EaseOut" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>

                    <!--  opacity  -->
                    <DoubleAnimation From="0" To="1" Duration="0:0:0.9"
                                     Storyboard.TargetName="OverlayBackground"
                                     Storyboard.TargetProperty="(UIElement.Opacity)">
                        <DoubleAnimation.EasingFunction>
                            <PowerEase Power="5" EasingMode="EaseOut" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>

                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </UserControl.Triggers>

</UserControl>